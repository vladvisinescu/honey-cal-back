version: "3.4"

services:
  php:
    container_name: php
    networks:
      - internal
    image: ${IMAGES_PREFIX:-}app-php
    restart: unless-stopped
    volumes:
      - php_socket:/var/run/php
    environment:
      TRUSTED_PROXIES: ${TRUSTED_PROXIES:-127.0.0.0/8,10.0.0.0/8,172.16.0.0/12,192.168.0.0/16}
      TRUSTED_HOSTS: ^${SERVER_NAME:-example\.com|localhost}|caddy$$
      # The two next lines can be removed after initial installation
      SYMFONY_VERSION: ${SYMFONY_VERSION:-}
      STABILITY: ${STABILITY:-stable}
      # Run "composer require symfony/orm-pack" to install and configure Doctrine ORM
      DATABASE_URL: postgres://honey:password@database:5432/honey?serverVersion=14&charset=utf8
      # Run "composer require symfony/mercure-bundle" to install and configure the Mercure integration
      MERCURE_URL: ${CADDY_MERCURE_URL:-http://caddy/.well-known/mercure}
      MERCURE_PUBLIC_URL: https://${SERVER_NAME:-localhost}/.well-known/mercure
      MERCURE_JWT_SECRET: ${CADDY_MERCURE_JWT_SECRET:-!ChangeThisMercureHubJWTSecretKey!}

  ###> doctrine/doctrine-bundle ###
  database:
    container_name: app-database
    networks:
      - internal
    image: postgres:${POSTGRES_VERSION:-14}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-ChangeMe}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    volumes:
      - ./var/db/data:/var/lib/postgresql/data:rw
    ports:
      - 5432:5432
  ###< doctrine/doctrine-bundle ###

  prometheus:
    container_name: app-prometheus
    networks:
      - internal
    image: prom/prometheus:v2.47.1
    volumes:
      - ./docker/prometheus/:/etc/prometheus/
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
    ports:
      - "9999:9090"

  rabbitmq:
    container_name: app-rabbitmq
    image: "rabbitmq:3.10.5-management"
    restart: unless-stopped
    ports:
      - "5630:5672"
      - "8090:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=honeycal
      - RABBITMQ_DEFAULT_PASS=h0n3yc4l

  # elasticsearch:
  #   container_name: app-elasticsearch
  #   image: docker.elastic.co/elasticsearch/elasticsearch:8.10.2
  #   ports:
  #     - "9200:9200"
  #     - "9300:9300"
  #   environment:
  #     - discovery.type=single-node
  #     - xpack.security.enabled=false
  #     - "ES_JAVA_OPTS=-Xms512m -Xmx512m"

  caddy:
    networks:
      - internal
    image: ${IMAGES_PREFIX:-}app-caddy
    depends_on:
      prometheus:
        condition: service_started
        restart: true
      rabbitmq:
        condition: service_started
        restart: true
      php:
        condition: service_healthy
        restart: true
    environment:
      SERVER_NAME: ${SERVER_NAME:-localhost}, caddy:80
      MERCURE_PUBLISHER_JWT_KEY: ${CADDY_MERCURE_JWT_SECRET:-!ChangeThisMercureHubJWTSecretKey!}
      MERCURE_SUBSCRIBER_JWT_KEY: ${CADDY_MERCURE_JWT_SECRET:-!ChangeThisMercureHubJWTSecretKey!}
    restart: unless-stopped
    volumes:
      - php_socket:/var/run/php
      - caddy_data:/data
      - caddy_config:/config
    ports:
      # HTTP
      - target: 80
        published: ${HTTP_PORT:-80}
        protocol: tcp
      # HTTPS
      - target: 443
        published: ${HTTPS_PORT:-443}
        protocol: tcp
      # HTTP/3
      - target: 443
        published: ${HTTP3_PORT:-443}
        protocol: udp

  # Mercure is installed as a Caddy module, prevent the Flex recipe from installing another service
  ###> symfony/mercure-bundle ###
  ###< symfony/mercure-bundle ###

networks:
  internal:
    driver: bridge

volumes:
  php_socket:
  caddy_data:
  caddy_config:
###> symfony/mercure-bundle ###
###< symfony/mercure-bundle ###

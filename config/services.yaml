# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
  # default configuration for services in *this* file
  _defaults:
    autowire: true # Automatically injects dependencies in your services.
    autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

  _instanceof:
    HoneyCal\Shared\Domain\Bus\Command\CommandHandler:
      tags: ["internal.command_handler"]

    HoneyCal\Shared\Domain\Bus\Event\DomainEventSubscriber:
      tags: ["internal.domain_event_subscriber"]

    HoneyCal\Shared\Domain\Bus\Query\QueryHandler:
      tags: ["internal.query_handler"]

  # makes classes in src/ available to be used as services
  # this creates a service per class whose id is the fully-qualified class name
  App\:
    resource: "../src/App"
    exclude:
      - "../src/App/DependencyInjection/"
      - "../src/App/Entity/"
      - "../src/App/Kernel.php"

  App\Controller\:
    resource: "../src/App/Controller"
    tags: ["controller.service_arguments"]

  # add more service definitions when explicit configuration is needed
  # please note that last definitions always *replace* previous ones
  HoneyCal\:
    resource: "../src/HoneyCal"

  # -- TAGGING --
  HoneyCal\Shared\Infrastructure\Bus\Event\InMemory\InMemorySymfonyEventBus:
    arguments: [!tagged internal.domain_event_subscriber]
    lazy: true

  HoneyCal\Shared\Infrastructure\Bus\Command\InMemorySymfonyCommandBus:
    arguments: [!tagged internal.command_handler]

  HoneyCal\Shared\Infrastructure\Bus\Query\InMemorySymfonyQueryBus:
    arguments: [!tagged internal.query_handler]

  HoneyCal\Shared\Infrastructure\Bus\Event\DomainEventMapping:
    arguments: [!tagged internal.domain_event_subscriber]

  HoneyCal\Shared\Infrastructure\Bus\Event\DomainEventSubscriberLocator:
    arguments: [!tagged internal.domain_event_subscriber]

  CodelyTv\Shared\Infrastructure\Doctrine\DatabaseConnections:
    arguments: [!tagged internal.database_connection]

  HoneyCal\Shared\Infrastructure\Bus\Event\Prometheus\WithPrometheusMonitoringEventBus:
    arguments:
      [
        '@HoneyCal\Shared\Infrastructure\Monitoring\PrometheusMonitor',
        "habits",
        '@HoneyCal\Shared\Infrastructure\Bus\Event\RabbitMq\RabbitMqEventBus',
      ]

  HoneyCal\Shared\Infrastructure\Bus\Event\RabbitMq\RabbitMqConnection:
    arguments:
      - host: "%env(RABBITMQ_HOST)%"
        port: "%env(RABBITMQ_PORT)%"
        vhost: "%env(RABBITMQ_VHOST)%"
        login: "%env(RABBITMQ_LOGIN)%"
        password: "%env(RABBITMQ_PASSWORD)%"
        read_timeout: 2
        write_timeout: 2
        connect_timeout: 5

  HoneyCal\Shared\Infrastructure\Bus\Event\RabbitMq\RabbitMqEventBus:
    arguments:
      [
        '@HoneyCal\Shared\Infrastructure\Bus\Event\RabbitMq\RabbitMqConnection',
        "%env(RABBITMQ_EXCHANGE)%",
      ]

  HoneyCal\Shared\Infrastructure\Bus\Event\RabbitMq\RabbitMqDomainEventsConsumer:
    arguments:
      - '@HoneyCal\Shared\Infrastructure\Bus\Event\RabbitMq\RabbitMqConnection'
      - '@HoneyCal\Shared\Infrastructure\Bus\Event\DomainEventJsonDeserializer'
      - "%env(RABBITMQ_EXCHANGE)%"
      - "%env(RABBITMQ_MAX_RETRIES)%"

  App\Command\DomainEvents\RabbitMq\ConfigureRabbitMqCommand:
    arguments:
      - '@HoneyCal\Shared\Infrastructure\Bus\Event\RabbitMq\RabbitMqConfigurer'
      - "%env(RABBITMQ_EXCHANGE)%"
      - !tagged internal.domain_event_subscriber

  HoneyCal\Shared\Infrastructure\Symfony\ApiExceptionListener:
    tags:
      - {
          name: kernel.event_listener,
          event: kernel.exception,
          method: onException,
        }

  HoneyCal\Shared\Domain\Bus\Event\EventBus: '@HoneyCal\Shared\Infrastructure\Bus\Event\Prometheus\WithPrometheusMonitoringEventBus'
